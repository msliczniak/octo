# A B T
# ---+-
# 0 0 E
# 0 1 V
# 1 0 R
# 1 1 L

# A B C
# ---+-
# 0 0 E
# 0 1 B
# 1 0 Y
# 1 1 R

:org 0x5b
: bottle-16
0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0

: bottle
0 0 0 0 0 0

: hand
0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0
: hand_10
0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0
0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0
0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0

0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0
0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0
0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0
0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0

0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0
0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0
0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0
0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0

0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0
0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0
0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0
0 0 0 0  0 0 0 0  0 0 0 0  0 0 0

: guard0
                                 0
0x00 0x00

: bottle0
0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0
0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0
0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0
0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0

: guard1
0xff 0x00 0x00 0x00

: bottle1
0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0
0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0
0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0
0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0

: guard2
0xff

: zeros
0 0 0 0  0 0 0 0

:org 0x200
: main
v0 := 0xff

: str0
v9 := 0x12
:next str1
va := 0x12

i := guard0
: lfsrm
save v2

i := guard1
save v3

i := guard2
save va

:org 0x212
hires

: _main
clear

i := zeros
load v7
v8 := 0
v9 := 8
i := hand
:call clear_range

v8 := 0xe8
i := bottle0
:call clear_range

v8 := 0xe8
i := bottle0
:call clear_range

:const SEEDM 0x78
:const SEEDL 0x07
:const LVLA 19
:const LVLB 20

:alias SPARE v0
:alias P0    v1
:alias LFSRM v2
:alias LFSRL v3
:alias FOUR  v4
:alias LVL   v5
:alias POS   v6
:alias TYPE  v7
:alias MSK   v8
:alias END   v9
:alias YPOS  va
:alias VIRI  vb
:alias EIGHTEEN vc
:alias FOURTEEN vd

:alias FLAG  vf

LFSRM := random 0x7f
LFSRL := random 0xff

if LFSRM != 0
then jump good_seed

if LFSRL == 0
then LFSRL := 1

: good_seed
#LFSRM := SEEDM
#LFSRL := SEEDL

v0 := LFSRM
v1 := LFSRL
i := lfsrm
save v1

v0 := 0
v7 := 55
v1 := LFSRM
:call draw_seed
v1 := LFSRL
:call draw_seed

FOURTEEN := 14
FOUR := 4
EIGHTEEN := 18

i := lfsrm
load v1
LFSRM := v0
LFSRL := v1

vf := 255
delay := vf

: repeat0
vf := delay
if vf != 253
then jump repeat0

YPOS := 2
VIRI := LVLA
END := 0x7d
:call gen_bottle

vf := delay
v8 := 253
v8 -= vf

i := str0
bcd v8

i := lfsrm
load v1
LFSRM := v0
LFSRL := v1

vf := 255
delay := vf

: repeat1
vf := delay
if vf != 253
then jump repeat1

YPOS := 61
VIRI := LVLB
END := 0xf5
:call gen_bottle

vf := delay
v8 := 253
v8 -= vf

i := str1
bcd v8

v8 := 4
v3 := 65

i := str0
load v2

i := hex v0
sprite v3 v8 5
v3 += 5
i := hex v1
sprite v3 v8 5
v3 += 5
i := hex v2
sprite v3 v8 5

v3 += 10
i := str1
load v2

i := hex v0
sprite v3 v8 5
v3 += 5
i := hex v1
sprite v3 v8 5
v3 += 5
i := hex v2
sprite v3 v8 5
v8 := 0
v7 := 52
v6 := 12

: _drawll
v7 -= 48
i := zeros
load v4
v5 := 0x80

: _drawl
i := hand_10
i += v8
load v0

if v0 == 1
then jump _draw0

if v0 == 2
then jump _draw1

if v0 == 4
then jump _draw2

i := dot-2
sprite v6 v7 3

: _drawr
v8 += 1
v7 += 6

v5 >>= v5
if vf == 0
then jump _drawl

v6 += 4
if v6 == 128
then jump _hand

if v6 != 64
then jump _drawll

v6 += 12
v7 += 9
v8 += 16
jump _drawll

: _hand
i := lfsrm
load v1
LFSRM := v0
LFSRL := v1

POS := 0
FOUR := 4
i := hand

vf := 255
delay := vf

: repeat2
vf := delay
if vf != 253
then jump repeat2

: _handf
LFSRM <<= LFSRM
LFSRL <<= LFSRL
LFSRM |= FLAG
SPARE := 0x80
SPARE &= LFSRM
FLAG := 0x80
FLAG &= LFSRL
SPARE += FLAG
SPARE <<= SPARE
LFSRL |= FLAG

v0 := 0xf
v0 &= LFSRM
if v0 > 8
then v0 -= 9

v1 := 0xf
v1 &= LFSRL
if v1 > 8
then v1 -= 9

save v2
i += FOUR
POS += 4

if POS != 0
then jump _handf

vf := delay
v8 := 253
v8 -= vf

i := str0
bcd v8

v8 := 4
v3 := 105

i := str0
load v2

i := hex v0
sprite v3 v8 5
v3 += 5
i := hex v1
sprite v3 v8 5
v3 += 5
i := hex v2
sprite v3 v8 5

vf := key
jump _main

: _draw0
i := virus0
sprite v6 v7 5
jump _drawr

: _draw1
i := virus1
sprite v6 v7 5
jump _drawr

: _draw2
i := virus2
sprite v6 v7 5
jump _drawr

: gen_bottle
i := ltbl
i += VIRI
load v0
LVL := v0
MSK := 0x7f

VIRI += 1
VIRI <<= VIRI
VIRI <<= VIRI

: _gen_bottle_loop
# pick level in bottle
LFSRM <<= LFSRM
LFSRL <<= LFSRL
LFSRM |= FLAG
SPARE := 0x80
SPARE &= LFSRM
FLAG := 0x80
FLAG &= LFSRL
SPARE += FLAG
SPARE <<= SPARE
LFSRL |= FLAG

POS := LFSRL
POS &= MSK
# clamp biasing to blottom of bottle
POS -= LVL
if FLAG == 0
then POS += LVL
P0 := POS
POS =- END
POS -= 1

: _gen_bottle_retry
POS += 1
i := bottle
i += POS
load v0

if v0 == 0
then jump _gen_bottle_found_empty

: _gen_bottle_try_again
if POS != END
then jump _gen_bottle_retry

END -= P0
P0 -= LVL
P0 <<= P0

: _gen_bottle_mask
if P0 > MSK
then jump _gen_bottle_loop

MSK >>= MSK
jump _gen_bottle_mask

: _gen_bottle_found_empty
# fail fast next time if neighbors too dense
:next b10000000
SPARE := 0x80
save SPARE

i := bottle-16
i += POS
load v0
TYPE := v0

FLAG := 6
FLAG &= POS
if FLAG == 4
then jump _gen_bottle_l

if FLAG == 6
then jump _gen_bottle_r

i += FOURTEEN
load v0
TYPE |= v0

i += FOUR
: _gen_bottle_r_ret
load v0
TYPE |= v0

i += FOURTEEN
: _gen_bottle_l_ret
load v0
TYPE |= v0

# remove msb in case empty was marked dense
TYPE <<= TYPE
if TYPE == 14
then jump _gen_bottle_try_again

TYPE >>= TYPE
SPARE := 3
SPARE &= VIRI
if SPARE != 3
then jump _gen_bottle_type_known

SPARE := 0xf
SPARE &= LFSRM
i := vtbl
i += SPARE
load v0
SPARE := v0

: _gen_bottle_type_known
if SPARE == 0
then SPARE := 4

FLAG := SPARE

: _gen_bottle_find_type
SPARE &= TYPE

if v0 == 0
then jump _gen_bottle_success

SPARE >>= SPARE
if FLAG != 0
then SPARE := 4
jump _gen_bottle_find_type

: _gen_bottle_success
SPARE := FLAG
i := bottle
i += POS
save SPARE

VIRI -= 1
i := b10000000
sprite VIRI YPOS 1

if VIRI == 0
then return

jump _gen_bottle_loop

: _gen_bottle_l
i += FOURTEEN
load v0
TYPE |= v0

i += EIGHTEEN
jump _gen_bottle_l_ret

: _gen_bottle_r
i += EIGHTEEN
jump _gen_bottle_r_ret


: clear_range
save v7
v8 += 8
i += v9
if v8 != 0
then jump clear_range

return

: draw_seed
v2 := 0xf
v2 &= v1
v1 >>= v1
v1 >>= v1
v1 >>= v1
v1 >>= v1
i := hex v1
sprite v0 v7 5
v0 += 5
i := hex v2
sprite v0 v7 5
v0 += 5
return

: ltbl
79 79 79 79 79 79 79
79 79 79 79 79 79 79
79 87 87 95 95 103 103

: vtbl
0 1 2 2 1 0 0 1 2 2 1 0 0 1 2 1

: viri
: virus0
0x20 0x70 0x70 0x70
: virus1
0x20 0x50 0x50 0x50
: virus2
0x20 0x50 0x70 0x50 0x20

: dot-2
0 0
: dot
0x10

:monitor hand 258
:monitor bottle0 141
