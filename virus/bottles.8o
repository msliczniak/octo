:alias FRAME vc

# A B T
# ---+-
# 0 0 E
# 0 1 V
# 1 0 R
# 1 1 L

# A B C
# ---+-
# 0 0 E
# 0 1 B
# 1 0 Y
# 1 1 R

:org 0x1f0
: zeros

:org 0x200
: main
i := zeros

: str
:monitor str 8
v8 := 0x12
v9 := 0x0a
save v9
hires

# 0x20a
: _main
clear

:const SEEDM 0
:const SEEDL 2

:alias C0    v0
:alias YPOS  v1
:alias LFSRM v2
:alias LFSRL v3
:alias VIRI  v4
:alias LVL   v5
:alias POS   v6
:alias TYPE  v7

:alias LFSR0 v8
:alias LFSR1 v9
:alias LVLA  va
:alias LVLB  vb

:alias C1    vf
:alias FLAG  vf

LVLA := 9
LVLB := 20
LFSR0 := SEEDM
LFSR1 := SEEDL

# clear game boards
i := zeros
load v7
FLAG := 0

: _main_clear
i := boards
i += FLAG
save v7
FLAG += 8
if FLAG != 0
then jump _main_clear

YPOS = 0

# game level
VIRI := LVLA
i := ltbl
i += VIRI
load v0
LVL := v0

VIRI += 1
VIRI <<= VIRI
VIRI <<= VIRI

LFSRM := LFSR0
LFSRL := LFSR1

: gen_loop

# pick level in bottle
LFSRM <<= LFSRM
LFSRL <<= LFSRL
LFSRM |= FLAG
C0 := 0x80
C0 &= LFSRM
C1 := 0x80
C1 &= LFSRL
C0 += C1
C0 <<= C0
LFSRL |= FLAG


POS := 0x7f
POS &= LFSRM
if POS < LVL
then jump gen_loop

# level in bottle is not too high

# virus position now set

TYPE := 3
TYPE &= VIRI
if TYPE != 0
then jump _type_known
C0 := 0xf
C0 &= LFSRL 
i := vtbl
i += C0
load v0
TYPE := v0

: _type_known

# we'll need these masks soon
#s0 := 3
#s1 := 7

: retry

i := bottles
i += POS
load v0

if v0 == 0
then jump found_empty

: try_again

POS += 1
if POS == 0x80
then jump gen_loop

jump retry

: found_empty

surrounding := 0

i := bottle
i += pos
load v0
v0 &= s0
i := bit_tbl
i += v0
load v0
surrounding |= v0

i := bottle1
i += pos
load v0
v0 &= s0
i := bit_tbl
i += v0
load v0
surrounding |= v0

s2 := pos
s2 &= s1

if s2 == 0
then jump ok0
if s2 == 1
then jump ok0

i := bottlem2
i += pos
load v0
v0 &= s0
i := bit_tbl
i += v0
load v0
surrounding |= v0

: ok0

if s2 == 6
then jump ok1
if s2 == 7
then jump ok1

i := bottlep2
i += pos
load v0
v0 &= s0
i := bit_tbl
i += v0
load v0
surrounding |= v0

: ok1

if surrounding == 7
then jump try_again

: find_type

i := bit_tbl
i += type
load v0
v0 &= surrounding
if v0 == 0
then jump success

if type == 0
then type := 3
type -= 1
jump find_type

: success

v0 := 0xd0
v0 |= type
i := bottle0
i += pos
save v0


# draw play fields
: _fieldr
v1 := 6

i := b00010001

: _field
:next b00010001
sprite v0 v1 1

v0 += 64
v1 += 9
sprite v0 v1 1

if v1 == 57
then jump _fieldc

v0 -= 64
v1 -= 3
jump _field

: _fieldc
if v0 == 120
then jump _fieldd

v0 -= 56
jump _fieldr

: _fieldd

FRAME := 255
delay := FRAME

: repeat
vf := delay
if vf != 253
then jump repeat

vf := delay
v8 := 253
v8 -= vf

i := str
bcd v8

v8 := 4
v3 := 65

i := str
load v2

i := hex v0
sprite v3 v8 5
v3 += 5
i := hex v1
sprite v3 v8 5
v3 += 5
i := hex v2
sprite v3 v8 5

vf := 9
i := hex vf
v0 := 0
v8 := 55
sprite v0 v8 5

vf := key
jump _main

: ltbl
0x30 0x30 0x30 0x30 0x30 0x30 0x30
0x30 0x30 0x30 0x30 0x30 0x30 0x30
0x30 0x28 0x28 0x20 0x20 0x18 0x18

: vtbl
1 2 3 3 2 1 1 2 3 3 2 1 1 2 3 2

:org 0xf0
: boards
:monitor boards 256
